# CAWS Working Specification
# This file defines the current change being worked on

id: PROV-0001
title: Major UX improvements for CAWS provenance tracking system
risk_tier: 1
mode: feature
# Budget managed via waiver WV-0002 for comprehensive UX improvements
waiver_ids: ["WV-0002"]  # Provenance UX improvements waiver
blast_radius:
  modules: ["caws-cli", "provenance", "git-hooks"]
  data_migration: false
operational_rollback_slo: "5m"
threats:
  - "Breaking changes to CLI command structure"
  - "Git hooks may conflict with existing workflows"
  - "Increased complexity in provenance tracking"
scope:
  in: ["packages/caws-cli/src/", "packages/caws-cli/templates/", "docs/", "*.md"]
  out: ["node_modules/", "packages/*/dist/", "packages/*/node_modules/", ".git/"]
invariants:
  - "Provenance tracking remains secure and tamper-proof"
  - "CLI commands provide clear feedback and guidance"
  - "Git hooks are optional and don't break existing workflows"
acceptance:
  - id: "A1"
    given: "User runs caws provenance --help"
    when: "UX improvements implemented"
    then: "Clear subcommand structure and descriptions shown"
  - id: "A2"
    given: "User runs caws provenance show --format=dashboard"
    when: "Provenance data exists"
    then: "Visual dashboard with metrics and insights displayed"
  - id: "A3"
    given: "User runs caws hooks install"
    when: "Git repository exists"
    then: "Automatic git hooks configured for provenance tracking"
non_functional:
  a11y: ["keyboard", "screen-reader"]
  perf: { api_p95_ms: 250, cli_response_ms: 1000 }
  security: ["validation", "audit-trail", "provenance-integrity"]
contracts:
  - type: "cli_interface"
    path: "packages/caws-cli/tests/contract/cli-contract.test.js"
observability:
  metrics:
    - "provenance_entries_created"
    - "dashboard_views_served"
    - "git_hooks_installed"
  logs:
    - "provenance_update_events"
    - "dashboard_render_events"
migrations:
  - "Migrate CLI command structure to subcommands"
  - "Add git hooks templates and scaffolding"
  - "Update documentation with new UX features"
rollback:
  strategy: "Revert CLI changes, keep provenance data intact"
  data_backup: "Export existing provenance chains before migration"