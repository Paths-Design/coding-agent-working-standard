# CAWS Working Specification
# This file defines the current change being worked on

id: ARCH-0001
title: Implement policy separation and waiver-based budget control
risk_tier: 1
mode: feature
change_budget:
  max_files: 50  # Tier 1 base (10) + waiver delta (50)
  max_loc: 5000  # Tier 1 base (250) + waiver delta (5000)
# Budget derived from policy.yaml based on risk_tier
# Waivers referenced by ID for exceptions
waiver_ids: ["WV-0001"]  # Bootstrap waiver for this architectural change
blast_radius:
  modules: ["core", "caws-cli", "quality-gates"]
  data_migration: true  # Restructuring governance files
operational_rollback_slo: "10m"
threats:
  - "Temporary budget bypass during transition"
  - "Existing working specs become invalid"
scope:
  in: [".caws/", "packages/caws-cli/src/", "packages/caws-cli/templates/"]
  out: ["node_modules/", "packages/*/dist/", "packages/*/node_modules/"]
invariants:
  - "Quality gates remain enforceable after restructuring"
  - "No silent policy bypass possible"
  - "Waivers provide auditable exception path"
acceptance:
  - id: "A1"
    given: "Agent attempts budget overrun"
    when: "Policy separation implemented"
    then: "Only waiver creation allowed, not budget editing"
  - id: "A2"
    given: "Code and policy changes in same PR"
    when: "Path discipline enforced"
    then: "CI rejects mixed changes"
  - id: "A3"
    given: "Waiver expires"
    when: "CI runs"
    then: "Budget automatically reverts to policy limits"
non_functional:
  a11y: ["keyboard", "screen-reader"]
  perf: { api_p95_ms: 250 }
  security: ["validation", "audit-trail", "dual-control"]
contracts:
  - type: "policy_schema"
    path: ".caws/policy.schema.json"
observability:
  metrics:
    - "policy_violations_blocked"
    - "waiver_expiration_enforced"
    - "dual_control_compliance"
  logs:
    - "budget_derivation_audit"
    - "waiver_validation_events"
migrations:
  - "Migrate existing change_budget fields to waiver_ids"
  - "Create initial policy.yaml from current budgets"
  - "Update validation logic to use derived budgets"
rollback:
  strategy: "Revert to file-based budgets if derivation fails"
  data_backup: "Export current working specs before migration"